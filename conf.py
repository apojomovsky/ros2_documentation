# -*- coding: utf-8 -*-
#
# rosindex documentation build configuration file, created by
# sphinx-quickstart on Tue Oct  2 16:34:57 2018.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

sys.path.append(os.path.abspath("./../../_sphinx/_ext"))
from redirectfrom import RedirectFrom

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#

# The master toctree document.
master_doc = 'index'

# The default role
default_role = 'any'

# The set of warnings to suppress.
suppress_warnings = ['image.nonlocal_uri']

# General information about the project.
project = u'ros2 documentation'
copyright = u'2018, Open Robotics'
author = u'Open Robotics'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u''
# The full version, including alpha/beta/rc tags.
release = u''

# Define the default role to use for links
default_role = 'any'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
extensions = ['sphinx.ext.intersphinx', 'helloworld', 'redirectfrom']

# Intersphinx mapping

intersphinx_mapping = {
    'catkin_pkg':    ('http://docs.ros.org/independent/api/catkin_pkg/html', None),
    'jenkins_tools': ('http://docs.ros.org/independent/api/jenkins_tools/html', None),
    'rosdep':        ('http://docs.ros.org/independent/api/rosdep/html', None),
    'rosdistro':     ('http://docs.ros.org/independent/api/rosdistro/html', None),
    'rosinstall':    ('http://docs.ros.org/independent/api/rosinstall/html', None),
    'rospkg':        ('http://docs.ros.org/independent/api/rospkg/html', None),
    'vcstools':      ('http://docs.ros.org/independent/api/vcstools/html', None)
}

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'ros2_docsdoc'

redirect_snippet = """\
    <link rel="canonical" href="../{dst}" />
    <meta http-equiv="refresh" content="0; url=../{dst}" />
    <script>
        window.location.href = '../{dst}';
    </script>
"""

redirects = {
    'About-Quality-of-Service-Settings': 'Concepts/About-Quality-of-Service-Settings',
    'About-ROS-Interfaces': 'Concepts/About-ROS-Interfaces',
    'Allocator-Template-Tutorial': 'Tutorials/Allocator-Template-Tutorial',
    'Alpha-Overview': 'Releases/Alpha-Overview',
    'Ament-Tutorial': 'Tutorials/Ament-Tutorial',
    'Beta1-Overview': 'Releases/Beta1-Overview',
    'Beta2-Overview': 'Releases/Beta2-Overview',
    'Beta3-Overview': 'Releases/Beta3-Overview',
    'Build-Cop-and-Build-Farmer-Guide': 'Contributing/Build-Cop-and-Build-Farmer-Guide',
    'Building-ROS-2-on-Linux-with-Eclipse-Oxygen': 'Tutorials/Building-ROS-2-on-Linux-with-Eclipse-Oxygen',
    'Building-Realtime-rt_preempt-kernel-for-ROS-2': 'Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2',
    'catment': 'Tutorials/catment',
    'CI-Server-Setup': 'Contributing/CI-Server-Setup',
    'Colcon-Tutorial': 'Tutorials/Colcon-Tutorial',
    'Composition': 'Tutorials/Composition',
    'DDS-and-ROS-middleware-implementations': 'Concepts/DDS-and-ROS-middleware-implementations',
    'Defining-custom-interfaces-(msg-srv)': 'Tutorials/Defining-custom-interfaces-(msg-srv)',
    'Design-Guide': 'Contributing/Design-Guide',
    'Developer-Guide': 'Contributing/Developer-Guide',
    'dummy-robot-demo': 'Tutorials/dummy-robot-demo',
    'Eclipse-Oxygen-with-ROS-2-and-rviz2': 'Tutorials/Eclipse-Oxygen-with-ROS-2-and-rviz2',
    'Examples-and-Tools-for-ROS1----ROS2-Migrations': 'Contributing/Examples-and-Tools-for-ROS1----ROS2-Migrations',
    'Fedora-Development-Setup': 'Installation/Fedora-Development-Setup',
    'Install-Connext-Security-Plugins': 'Installation/Install-Connext-Security-Plugins',
    'Intel-ROS2-Projects': 'Related-Projects/Intel-ROS2-Projects',
    'Inter-Sphinx-Support': 'Contributing/Inter-Sphinx-Support',
    'Intra-Process-Communication': 'Tutorials/Intra-Process-Communication',
    'Introspection-with-command-line-tools': 'Tutorials/Introspection-with-command-line-tools',
    'Launch-system': 'Tutorials/Launch-system',
    'Linux-Development-Setup': 'Installation/Linux-Development-Setup',
    'Linux-Install-Binary': 'Installation/Linux-Install-Binary',
    'Linux-Install-Debians': 'Installation/Linux-Install-Debians',
    'Logging': 'Concepts/Logging',
    'Logging-and-logger-configuration': 'Tutorials/Logging-and-logger-configuration',
    'MISRA-Compliance-Guide': 'Contributing/MISRA-Compliance-Guide',
    'Maintaining-a-Source-Checkout': 'Installation/Maintaining-a-Source-Checkout',
    'Managed-Nodes': 'Tutorials/Managed-Nodes',
    'Migration-Guide': 'Contributing/Migration-Guide',
    'Migration-Guide-Python': 'Contributing/Migration-Guide-Python',
    'New-features-in-ROS-2-interfaces-(msg-srv)': 'Tutorials/New-features-in-ROS-2-interfaces-(msg-srv)',
    'Node-arguments': 'Tutorials/Node-arguments',
    'OSX-Development-Setup': 'Installation/OSX-Development-Setup',
    'OSX-Install-Binary': 'Installation/OSX-Install-Binary',
    'Overview-of-ROS-2-concepts': 'Concepts/Overview-of-ROS-2-concepts',
    'Python-Programming': 'Tutorials/Python-Programming',
    'Quality-Guide': 'Contributing/Quality-Guide',
    'Quality-of-Service': 'Tutorials/Quality-of-Service',
    'ROS-2-Client-Libraries': 'Concepts/ROS-2-Client-Libraries',
    'ROS-2-On-boarding-Guide': 'Contributing/ROS-2-On-boarding-Guide',
    'RQt-Overview-Usage': 'Tutorials/RQt-Overview-Usage',
    'RQt-Port-Plugin-Windows': 'Tutorials/RQt-Port-Plugin-Windows',
    'RQt-Source-Install': 'Tutorials/RQt-Source-Install',
    'RQt-Source-Install-MacOS': 'Tutorials/RQt-Source-Install-MacOS',
    'RQt-Source-Install-Windows10': 'Tutorials/RQt-Source-Install-Windows10',
    'Real-Time-Programming': 'Tutorials/Real-Time-Programming',
    'Release-Ardent-Apalone': 'Releases/Release-Ardent-Apalone',
    'Release-Bouncy-Bolson': 'Releases/Release-Bouncy-Bolson',
    'Release-Crystal-Clemmys': 'Releases/Release-Crystal-Clemmys',
    'Release-Howto': 'Releases/Release-Howto',
    'Releasing-a-ROS-2-package-with-bloom': 'Tutorials/Releasing-a-ROS-2-package-with-bloom',
    'Rosbag-with-ROS1-Bridge': 'Tutorials/Rosbag-with-ROS1-Bridge',
    'Rosidl-Tutorial': 'Tutorials/Rosidl-Tutorial',
    'Run-2-nodes-in-a-single-docker-container': 'Tutorials/Run-2-nodes-in-a-single-docker-container',
    'Run-2-nodes-in-two-separate-docker-containers': 'Tutorials/Run-2-nodes-in-two-separate-docker-containers',
    'Set-up-a-new-Linux-CI-node': 'Contributing/Set-up-a-new-Linux-CI-node',
    'Set-up-a-new-Windows-CI-node': 'Contributing/Set-up-a-new-Windows-CI-node',
    'Set-up-a-new-macOS-CI-node': 'Contributing/Set-up-a-new-macOS-CI-node',
    'tf2': 'Tutorials/tf2',
    'Windows-Development-Setup': 'Installation/Windows-Development-Setup',
    'Windows-Install-Binary': 'Installation/Windows-Install-Binary',
    'Working-with-multiple-RMW-implementations': 'Tutorials/Working-with-multiple-RMW-implementations',
}


def generate_redirects(app):
    page_redirects = []
    template_name = "layout.html"
    repo = os.path.basename(os.path.dirname(os.path.realpath(__file__)))
    for src, dst in RedirectFrom.redirects.items():
        #if app.builder.name == 'html'
        #    dst += '.html'
        page_name = src
        context = {
            'title': src,
            'body': "",
            # This is being appended to the head of the page
            'metatags': redirect_snippet.format(**locals()),
        }
        page_redirects.append((page_name, context, template_name))
    return page_redirects


def setup(app):
    app.connect('html-collect-pages', generate_redirects)
